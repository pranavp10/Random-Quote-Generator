{"version":3,"sources":["utils.js","components/button.js","components/container.js","components/quoteBox.js","App.js","index.js"],"names":["getRandomColor","color","i","Math","floor","random","fetchData","a","fetch","data","json","result","console","log","Button","text","onClick","style","transition","border","backgroundColor","padding","borderRadius","width","marginTop","Container","children","position","height","display","alignItems","justifyContent","QuoteBox","id","maxWidth","maxHeight","flexDirection","margin","App","useState","quote","setQuote","author","setAuthor","setColor","populateData","content","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAaA,G,MAAiB,WAG5B,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BD,GAHe,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEpC,OAAOJ,IAGIK,EAAS,uCAAG,8BAAAC,EAAA,+EAGRC,MAAM,kCAHE,cAGrBC,EAHqB,gBAINA,EAAKC,OAJC,OAIrBC,EAJqB,uDAMrBC,QAAQC,IAAR,MANqB,iCAQhBF,GARgB,yDAAH,qDCaPG,EApBA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMd,EAAqB,EAArBA,MAAOe,EAAc,EAAdA,QAC7B,OACE,4BACEC,MAAO,CACLC,WAAY,YACZC,OAAQ,OACRC,gBAAgB,GAAD,OAAKnB,GACpBA,MAAO,OACPoB,QAAS,OACTC,aAAc,OACdC,MAAO,OACPC,UAAW,QAEbR,QAASA,GAERD,ICIQU,EAnBG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUzB,EAAY,EAAZA,MAC7B,OACE,yBACEgB,MAAO,CACLC,WAAY,YACZE,gBAAgB,GAAD,OAAKnB,GACpB0B,SAAU,WACVJ,MAAO,OACPK,OAAQ,OACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGjBL,ICMQM,EApBE,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SAClB,OACE,yBACEO,GAAG,WACHhB,MAAO,CACLG,gBAAiB,OACjBc,SAAU,QACVC,UAAW,QACXd,QAAS,OACTC,aAAc,OACdO,QAAS,OACTO,cAAe,SACfC,OAAQ,SAGTX,ICkBQY,EA9BH,WAAO,IAAD,EACUC,mBAAS,MADnB,mBACTC,EADS,KACFC,EADE,OAEYF,mBAAS,MAFrB,mBAETG,EAFS,KAEDC,EAFC,OAGUJ,mBAAS,MAHnB,mBAGTtC,EAHS,KAGF2C,EAHE,KAKVC,EAAY,uCAAG,8BAAAtC,EAAA,sEACED,IADF,OACbK,EADa,OAEbV,EAAQD,IACd4C,EAAS3C,GACTwC,EAAS9B,EAAOmC,SAChBH,EAAUhC,EAAO+B,QALE,2CAAH,qDAUlB,OAHAK,qBAAU,WACRF,MACC,IAED,kBAAC,EAAD,CAAW5C,MAAOA,GAChB,kBAAC,EAAD,KACE,uBAAGgC,GAAG,SAASO,GACf,uBAAGP,GAAG,UAAN,YAAqBS,GAAU,cAC/B,kBAAC,EAAD,CACE3B,KAAK,wBACLd,MAAOA,EACPe,QAAS6B,OCvBnBG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.fb152633.chunk.js","sourcesContent":["export const getRandomColor = () => {\n  const alphabet = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i += 1) {\n    color += alphabet[Math.floor(Math.random() * 12)];\n  }\n  return color;\n};\n\nexport const fetchData = async () => {\n  let data, result;\n  try {\n    data = await fetch(\"https://api.quotable.io/random\");\n    result = await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n  return result;\n};\n","import React from \"react\";\n\nconst Button = ({ text, color, onClick }) => {\n  return (\n    <button\n      style={{\n        transition: \"all 500ms\",\n        border: \"none\",\n        backgroundColor: `${color}`,\n        color: \"#fff\",\n        padding: \"10px\",\n        borderRadius: \"10px\",\n        width: \"auto\",\n        marginTop: \"20px\",\n      }}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst Container = ({ children, color }) => {\n  return (\n    <div\n      style={{\n        transition: \"all 500ms\",\n        backgroundColor: `${color}`,\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\n\nconst QuoteBox = ({ children }) => {\n  return (\n    <div\n      id=\"QuoteBox\"\n      style={{\n        backgroundColor: \"#fff\",\n        maxWidth: \"600px\",\n        maxHeight: \"450px\",\n        padding: \"30px\",\n        borderRadius: \"10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: \"20px\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default QuoteBox;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { fetchData, getRandomColor } from \"./utils\";\nimport { Button, Container, QuoteBox } from \"./components\";\n\nconst App = () => {\n  const [quote, setQuote] = useState(null);\n  const [author, setAuthor] = useState(null);\n  const [color, setColor] = useState(null);\n\n  const populateData = async () => {\n    const result = await fetchData();\n    const color = getRandomColor();\n    setColor(color);\n    setQuote(result.content);\n    setAuthor(result.author);\n  };\n  useEffect(() => {\n    populateData();\n  }, []);\n  return (\n    <Container color={color}>\n      <QuoteBox>\n        <p id=\"quote\">{quote}</p>\n        <p id=\"author\">{`- ${author || \"Anonymous\"}`}</p>\n        <Button\n          text=\"Generate Random Quote\"\n          color={color}\n          onClick={populateData}\n        />\n      </QuoteBox>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}